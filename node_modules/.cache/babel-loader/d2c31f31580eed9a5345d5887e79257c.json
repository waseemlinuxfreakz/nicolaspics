{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\n\nconst useFetch = url => {\n  _s();\n\n  const [data, setData] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    console.log(url);\n    const abortCont = new AbortController();\n    setTimeout(() => {\n      fetch(url, {\n        signal: abortCont.signal\n      }).then(res => {\n        if (!res.ok) {\n          throw Error('could not fetch the data for that resource');\n        }\n\n        return res.json();\n      }).then(data => {\n        setIsPending(false);\n        console.log(data);\n        setData(data);\n        setError(null);\n      }).catch(err => {\n        if (err.name === 'AbortError') {\n          console.log('fetch http call aborted');\n        } else {\n          setIsPending(false);\n          setError(err.message);\n        }\n      });\n    }, 1000);\n    return () => abortCont.abort();\n  }, [url]);\n  const obj = {\n    data,\n    isPending,\n    error\n  };\n  return obj;\n};\n\n_s(useFetch, \"VxPkICXS4AfkXU1R8tuEJAA8e58=\");\n\nexport default useFetch;","map":{"version":3,"sources":["C:/Users/99webdesigns/Documents/GitHub/nicolaspics/src/Utils/useFetch.js"],"names":["useState","useEffect","useFetch","url","data","setData","isPending","setIsPending","error","setError","console","log","abortCont","AbortController","setTimeout","fetch","signal","then","res","ok","Error","json","catch","err","name","message","abort","obj"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,QAAQ,GAAIC,GAAD,IAAS;AAAA;;AACxB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,OAAO,CAACC,GAAR,CAAYR,GAAZ;AACA,UAAMS,SAAS,GAAG,IAAIC,eAAJ,EAAlB;AAEAC,IAAAA,UAAU,CAAC,MAAM;AACfC,MAAAA,KAAK,CAACZ,GAAD,EAAM;AAAEa,QAAAA,MAAM,EAAEJ,SAAS,CAACI;AAApB,OAAN,CAAL,CACCC,IADD,CACMC,GAAG,IAAI;AACX,YAAI,CAACA,GAAG,CAACC,EAAT,EAAa;AACX,gBAAMC,KAAK,CAAC,4CAAD,CAAX;AACD;;AACD,eAAOF,GAAG,CAACG,IAAJ,EAAP;AACD,OAND,EAOCJ,IAPD,CAOMb,IAAI,IAAI;AACZG,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAG,QAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACAC,QAAAA,OAAO,CAACD,IAAD,CAAP;AACAK,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,OAZD,EAaCa,KAbD,CAaOC,GAAG,IAAI;AACZ,YAAIA,GAAG,CAACC,IAAJ,KAAa,YAAjB,EAA+B;AAC7Bd,UAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACD,SAFD,MAEO;AACLJ,UAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,UAAAA,QAAQ,CAACc,GAAG,CAACE,OAAL,CAAR;AACD;AACF,OApBD;AAqBD,KAtBS,EAsBP,IAtBO,CAAV;AAwBA,WAAO,MAAMb,SAAS,CAACc,KAAV,EAAb;AACD,GA7BQ,EA6BN,CAACvB,GAAD,CA7BM,CAAT;AA+BA,QAAMwB,GAAG,GAAG;AAAEvB,IAAAA,IAAF;AAAQE,IAAAA,SAAR;AAAmBE,IAAAA;AAAnB,GAAZ;AACA,SAAOmB,GAAP;AACD,CAtCD;;GAAMzB,Q;;AAwCN,eAAeA,QAAf","sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nconst useFetch = (url) => {\r\n  const [data, setData] = useState(null);\r\n  const [isPending, setIsPending] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    console.log(url)\r\n    const abortCont = new AbortController();\r\n\r\n    setTimeout(() => {\r\n      fetch(url, { signal: abortCont.signal})\r\n      .then(res => {\r\n        if (!res.ok) { \r\n          throw Error('could not fetch the data for that resource');\r\n        } \r\n        return res.json();\r\n      })\r\n      .then(data => {\r\n        setIsPending(false);\r\n        console.log(data)\r\n        setData(data);\r\n        setError(null);\r\n      })\r\n      .catch(err => {\r\n        if (err.name === 'AbortError') {\r\n          console.log('fetch http call aborted')\r\n        } else {\r\n          setIsPending(false);\r\n          setError(err.message);\r\n        }\r\n      })\r\n    }, 1000);\r\n\r\n    return () => abortCont.abort();\r\n  }, [url])\r\n\r\n  const obj = { data, isPending, error }\r\n  return obj;\r\n}\r\n \r\nexport default useFetch;"]},"metadata":{},"sourceType":"module"}